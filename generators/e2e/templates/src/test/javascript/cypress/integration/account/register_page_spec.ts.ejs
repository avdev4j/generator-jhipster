describe('/account/register', () => {
    beforeEach(() => {
        cy.server();
        cy.route('POST', '/api/register').as('registerSave')
    });

    it('should load the register page', () => {
        cy.visit('/account/register');
        // TODO add translation support here.
        cy.contains('h1', 'Registration');
    });

    it('requires username', () => {
        cy.register('', 'someemail@example.com', 'password', 'password');
        cy.get('#username').should('have.class', 'is-invalid');
    });

    it('requires email', () => {
        cy.register('admin', '', 'password', 'password');
        cy.get('#email').should('have.class', 'is-invalid');
    });

    it('requires email in correct format', () => {
        cy.register('admin', 'someemail', 'password', 'password');
        cy.get('#email').should('have.class', 'is-invalid');
    });

    it('requires confirm password', () => {
        cy.register('admin', 'someemail@example.com', 'password', '');
        cy.get('#secondPassword').should('have.class', 'is-invalid');
    });

    it('requires password and confirm password to be same', () => {
        cy.register('admin', 'someemail@example.com', 'password', 'different-password');
        cy.get('#secondPassword').should('have.class', 'is-invalid');
    });

    it('register a valid user', () => {
        cy.register('new-user', 'new-user@example.com', 'password', 'password');
        cy.wait('@registerSave').its('status').should('equal', 201);
    });

    it('error for existing user', () => {
        cy.register('admin', 'admin@localhost.com', 'password', 'password');
        cy.wait('@registerSave').its('status').should('equal', 400);
    });
});