import {
    firstNameSettingsSelector,
    lastNameSettingsSelector,
    submitSettingsSelector,
    emailSettingsSelector,
  } from '../../support/commands'

  describe('/account/settings', () => {
    beforeEach(() => {
      cy.server();
      cy.route('POST', '/api/account').as('settingsSave');
    });

    before(() => {
      cy.visit('');
      cy.login("user","user");
      cy.clickOnSettingsItem();
    })

    it("should be able to change 'user' firstname settings", () => {
      cy.get(firstNameSettingsSelector).clear().type('jhipster');
      // need to modify email because default email does not match regex in vue
      cy.get(emailSettingsSelector).clear().type('user@localhost.fr');
      cy.get(submitSettingsSelector).click();
      cy.wait('@settingsSave').its('status').should('equal', 200);
    });

    it("should be able to change 'user' lastname settings", () => {
      cy.get(lastNameSettingsSelector).clear().type('retspihj');
      // need to modify email because default email does not match regex in vue
      cy.get(emailSettingsSelector).clear().type('user@localhost.fr');
      cy.get(submitSettingsSelector).click();
      cy.wait('@settingsSave').its('status').should('equal', 200);
    });

    it("should be able to change 'user' email settings", () => {
      cy.get(emailSettingsSelector).clear().type('user@localhost.fr');
      cy.get(submitSettingsSelector).click();
      cy.wait('@settingsSave').its('status').should('equal', 200);

      // need to add a validation email with the same pattern in react and angular
      cy.clickOnLogoutItem();
      cy.login("admin", "admin");
      cy.clickOnSettingsItem();
      cy.get(emailSettingsSelector).clear().type('admin@localhost.fr');
      cy.get(submitSettingsSelector).click();
    });

    it("should not be able to change 'user' settings if email already exists", () => {
      cy.clickOnLogoutItem();
      cy.login("user","user");
      cy.clickOnSettingsItem();
      cy.get(emailSettingsSelector).clear().type('admin@localhost.fr');
      cy.get(submitSettingsSelector).click();
      cy.wait('@settingsSave').its('status').should('equal', 400);
    });

    after(() => {
      cy.clickOnLogoutItem();
    })
  })
