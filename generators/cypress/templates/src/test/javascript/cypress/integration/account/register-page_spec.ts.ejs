import {
    usernameRegisterSelector,
    emailRegisterSelector,
    firstPasswordRegisterSelector,
    secondPasswordRegisterSelector,
    submitRegisterSelector } from '../../support/commands';

  describe('/account/register', () => {
    beforeEach(() => {
      cy.server();
      cy.route('POST', '/api/register').as('registerSave');
    });

    before(() => {
      cy.visit('');
      cy.clickOnRegisterItem();
    });

    it('should load the register page', () => {
      cy.get(submitRegisterSelector).should('be.visible');
    });

    it('requires username', () => {
      cy.get(submitRegisterSelector).click({force: true});
      // Should stay in the same page when register fails
      cy.get(submitRegisterSelector).should('be.visible');
      cy.get(usernameRegisterSelector).type('test');
    });

    it('requires email', () => {
      cy.get(submitRegisterSelector).click({force: true});
      // Should stay in the same page when register fails
      cy.get(submitRegisterSelector).should('be.visible');
      cy.get(emailRegisterSelector).type('testtest.fr');
    });

    it('requires email in correct format', () => {
      cy.get(submitRegisterSelector).click({force: true});
      // Should stay in the same page when register fails
      cy.get(submitRegisterSelector).should('be.visible');
      cy.get(emailRegisterSelector).type('test@test.fr');
    });

    it('requires first password', () => {
      cy.get(submitRegisterSelector).click({force: true});
      // Should stay in the same page when register fails
      cy.get(submitRegisterSelector).should('be.visible');
      cy.get(firstPasswordRegisterSelector).type('test');
    });

    it('requires password and confirm password to be same', () => {
      cy.get(submitRegisterSelector).click({force: true});
      // Should stay in the same page when register fails
      cy.get(submitRegisterSelector).should('be.visible');
      cy.get(secondPasswordRegisterSelector).type('test');
    });

    it('register a valid user', () => {
      cy.get(submitRegisterSelector).click();
      cy.wait('@registerSave').its('status').should('equal', 201);
    });

    it('error for existing user', () => {
      cy.visit('');
      cy.clickOnRegisterItem();
      cy.get(usernameRegisterSelector).type('admin');
      cy.get(emailRegisterSelector).type('admin@localhost.com');
      cy.get(firstPasswordRegisterSelector).type('admin');
      cy.get(secondPasswordRegisterSelector).type('admin');
      cy.get(submitRegisterSelector).click();
      cy.wait('@registerSave').its('status').should('equal', 400);
    });
  });
